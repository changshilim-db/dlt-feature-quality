name: Feature Store Data Quality Sample GitHub Action

on:
  push:
    branches: [ "master" ]

jobs:

  sample:

    runs-on: ubuntu-latest
    
    env:
      DATABRICKS_HOST: ${{ secrets.DB_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DB_TOKEN }}
      DATABRICKS_REPO_PATH: /Repos/Feature-Store-Data-Quality/code-repo

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install pip
        run: |
          python -m pip install --upgrade pip
          
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Configure Terraform
        uses: hashicorp/setup-terraform@v2 

      - name: Configure Databricks Config
        run: |
          echo "[DEFAULT]" >> ~/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

      # Update to your preferred backend
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Check if repo exists
        id: check-repo
        run: databricks repos get --path $DATABRICKS_REPO_PATH
        continue-on-error: true 

      - name: Create staging Repos
        if: steps.check-repo.outcome == 'failure'
        env:
          repo_url: 'https://github.com/${{ github.repository }}.git'
        run: |
          databricks repos create --url=${{env.repo_url}} --provider=gitHub --path=$DATABRICKS_REPO_PATH

      - name: Update staging Repos
        run: databricks repos update --path=$DATABRICKS_REPO_PATH --branch=${{ github.ref_name }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve
          